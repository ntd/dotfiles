let s:cpo_save=&cpo
set cpo&vim

runtime vimpagerrc              " Common (view) settings go into vimpagerrc

let g:netrw_dirhistmax=0        " Avoid .netrwhist creation
set dir=$HOME/.vim/tmp/swap     " Directory for temporary files

set modeline
set notimeout                   " Don't timeout on mappings
set ttimeout                    " Do timeout on terminal key codes
set timeoutlen=100              " Timeout after 100 msec
set splitright                  " Predilige vertical split on the right

set listchars=tab:↔­,trail:·,precedes:⇐,extends:⇒
set list
set showmode
set showcmd
set showmatch
set relativenumber
set ruler
set laststatus=2

set autoindent
set shiftwidth=4
set softtabstop=4
set expandtab
set foldnestmax=1
set foldminlines=5

set wrap
set textwidth=72
set hidden
set backspace=indent,eol,start

if exists("&colorcolumn")
    set colorcolumn=72          " Canonical right column
endif

set backupdir=$HOME/.vim/tmp/backup
set backup
set writebackup

let g:proj_flags='mstvcg'       " 'Project' flags
let g:proj_file='.config/vimproject'
let g:proj_split='vs'           " Split vertically

filetype plugin indent on

" Any private customizations go into vimrc-private
if filereadable($HOME . "/.vimrc-private")
    " Kept for backward compatibility
    source $HOME/.vimrc-private
else
    runtime vimrc-private
endif

" Append the git active branch to the status line
let g:lightline = {
\     'active': {
\         'left': [ [ 'mode', 'paste' ],
\                   [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
\     },
\     'component_function': {
\         'gitbranch': 'gitbranch#name',
\     },
\ }

let &cpo=s:cpo_save
unlet s:cpo_save
